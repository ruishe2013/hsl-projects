<?xml version="1.0" encoding="gbk"?>
<!--
	数据库迁移配置：
	有问题请联系 龙毅 longyi@taobao.com
-->
<configuration>
	<!--
		全局配置
	-->
	<globalConfig>
		<!-- 多表的格式 -->
		<rangeFormat value="$table_%04d" />
		<!-- 
		状态的存储引擎		
		-->
		<storeEngine type="table" db="db1">
		</storeEngine>
	</globalConfig>

	<!-- 
	数据库相关配置 
		id: 标识符，其他地方可以引用到它
		dataSource: 数据源名
		dbType: 数据库类型，某些场合需要特定的数据库语句执行，目前只支持mysql
	-->
	<db id="db1" dataSource="myDs" dbType="mysql"/>
	<db id="db2" dataSource="yourDs1" dbType="mysql" />
	<db id="db3" dataSource="yourDs2" dbType="mysql" />
	<db id="db4" dataSource="yourDs3" dbType="mysql" />
	<db id="db5" dataSource="yourDs4" dbType="mysql" />

	<!-- 配置dumper -->
	<dumper name="dumper1">
		<!-- 		
		需要dump的表
			db: 所在数据库
			name: 表名
			orderBy(可选): 查询时跟的order by语句，建议设置可排序的id字段来，可以设置多个，中间用","隔开。默认值"id"
			range(可选): 如果设置了这个属性，就说明有多张表。如果没有就说明只有一张表
			rangeFormat(可选): 表名的格式，如果没有设置会采用全局配置的rangeFormat
		-->
		<table db="db1" name="group_user" range="0-7"></table>

		<!--
		触发器: 单条数据的处理后会调用触发器
			默认的columnRecordTrigger触发器会记录已经配置的字段，持久化到存储引擎间隔在delay中配置
			type: 触发器类型，也可以自己定义自己的触发器
			[delay]:等其他属性可以根据传输给触发器
		-->
		<trigger type="columnRecordtrigger" delay="1000">
			<!--
			默认的columnRecordtrigger触发器中需要记录的字段值
			-->
			<column name="user_id"></column>
			<column name="gmt_modified"></column>
		</trigger>

		<!--
		全量恢复，当全量被中断时，可以恢复继续执行
			column: 查询的条件字段
			oper: 操作类型 egt 大于等于, eg 大于
		-->
		<fullDumpRestore>
			<condition column="user_id" oper="egt" />
		</fullDumpRestore>

		<!--
		增量执行配置
			column: 查询的条件字段
			oper: 操作类型 egt 大于等于, eg 大于
		-->
		<incrDumpRestore>
			<condition column="gmt_modified" oper="egt" />
		</incrDumpRestore>

		<!--
		多线程dump:
			默认只支持每个表一个线程
		-->
		<thread type="threadPerTable" />
		
		<!--
		拦截器:
			可以对dump过程中进行拦截，做一些自定义的事情，比如字段名映射，类型转换等等
		-->
		<interceptors>
		<!--
			<interceptor type="charsetTransfer1">
			<interceptor type="charsetTransfer2">
		-->
		</interceptors>
		
		<!--
			type: 处理类型，默认支持continue（直接处理一下条），可自定义扩展
		-->
		<exceptionHandler type="continue" />
		<!--
		数据派发:
			type: 数据派发的类型，默认支持modRoute和twoModRoute两种类型，前者根据单一字段分库分表，后者根据二维分库分表
					该字段可以自定义扩张
			[routeColumn, dbRouteColumn, tableRouteColumn]其他属性字段根据type类型的不同自动选用
		-->
		<dispatcher type="modRoute" routeColumn="user_id">
			<!--
			目标表：根据table的数量和range信息计算出分库和分表的总数
				dbIndex：库索引
				db: 目标数据库
				name: 表名
				range: 分表范围
				rangeFormat(可选): 表名的格式，如果没有设置会采用全局配置的rangeFormat
			-->
			<table dbIndex="0" db="db2" name="other_user" range="0-31">
			</table>
			<table dbIndex="1" db="db3" name="other_user" range="32-63">
			</table>
		</dispatcher>
	</dumper>

	<dumper name="dumper2">
		<table db="db1" name="group_reply" range="0-31" orderBy="id"></table>
		<thread type="threadPerTable" />
		<dispatcher type="twoModRoute" dbRouteColumn="group_id" tableRouteColumn="thread_id">
			<table dbIndex="0" db="db2" name="other_user" range="0-127"></table>
			<table dbIndex="1" db="db3" name="other_user" range="128-255"></table>
			<table dbIndex="2" db="db4" name="other_user" range="256-383"></table>
			<table dbIndex="3" db="db5" name="other_user" range="384-511"></table>
		</dispatcher>
	</dumper>

	<dumper  name="dumper3">
		<table db="db1" name="group_group_user" range="0-7" orderBy="user_id,group_id"></table>
		<thread type="threadPerTable" />
		<trigger type="columnRecordtrigger" delay="1000">
			<column name="user_id"></column>
			<column name="group_id"></column>
			<column name="gmt_modified"></column>
		</trigger>
		<fullDumpRestore>
			<condition column="user_id" oper="egt" />
			<condition column="group_id" oper="egt" />
		</fullDumpRestore>
		<incrDumpRestore>
			<condition column="gmt_modified" oper="egt" />
		</incrDumpRestore>
		<dispatcher type="twoModRoute" dbRouteColumn="group_id" tableRouteColumn="thread_id">
			<table dbIndex="0" db="db2" name="other_user" range="0-127"></table>
			<table dbIndex="1" db="db3" name="other_user" range="128-255"></table>
			<table dbIndex="2" db="db4" name="other_user" range="256-383"></table>
			<table dbIndex="3" db="db5" name="other_user" range="384-511"></table>
		</dispatcher>
	</dumper>

</configuration>